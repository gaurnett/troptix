datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  PATRON
  ORGANIZER
}

model Users {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  name      String
  role      Role      @default(PATRON)
  tickets   Tickets[]
  orders    Orders[]
}

model Tickets {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  event         Events      @relation(fields: [eventsId], references: [id])
  eventsId      String
  Orders        Orders?     @relation(fields: [ordersId], references: [id])
  ordersId      String?
  ticketType    TicketTypes @relation(fields: [ticketTypesId], references: [id])
  ticketTypesId String
  Users         Users?      @relation(fields: [usersId], references: [id])
  usersId       String?

  @@index([eventsId])
  @@index([ordersId])
  @@index([ticketTypesId])
  @@index([usersId])
}

model Orders {
  id         String    @id @default(uuid())
  totalPrice Float
  tickets    Tickets[]

  Users    Users?  @relation(fields: [usersId], references: [id])
  usersId  String?
  event    Events  @relation(fields: [eventsId], references: [id])
  eventsId String

  @@index([usersId])
  @@index([eventsId])
}

model Events {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Event Details
  imageUrl    String
  name        String
  description String
  organizer   String

  // Date and Time Details
  startDate DateTime
  startTime DateTime
  endDate   DateTime
  endTime   DateTime

  // Location Details
  address String

  // Ticket Details
  Tickets     Tickets[]
  TicketTypes TicketTypes[]
  Orders      Orders[]
}

enum TicketFeeStructure {
  // Fees to be included in the ticket price you set. 
  // Fees will be deducted from your sales at the time of your payout.
  ABSORB_TICKET_FEES
  // Attendees to pay the fees on top of the ticket price you set. 
  // Fees will be collected off the top of your ticket sales at the time of your payout.
  PASS_TICKET_FEES
}

model TicketTypes {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Ticket Details
  name               String
  description        String
  maxPurchasePerUser Int
  quantity           Int

  // Sale Date Details
  saleStartDate DateTime
  saleStartTime DateTime
  saleEndDate   DateTime
  saleEndTime   DateTime

  // Price Details
  price         Float
  ticketingFees TicketFeeStructure @default(PASS_TICKET_FEES)

  event   Events    @relation(fields: [eventId], references: [id])
  eventId String
  Tickets Tickets[]

  @@index([eventId])
}
