{"version":3,"names":["CircularProgress","value","initialValue","circleBackgroundColor","COLORS","TRANSPARENT","radius","duration","delay","maxValue","strokeLinecap","onAnimationComplete","activeStrokeColor","GREEN","activeStrokeSecondaryColor","activeStrokeWidth","inActiveStrokeColor","BLACK_30","inActiveStrokeWidth","inActiveStrokeOpacity","clockwise","rotation","title","titleStyle","titleColor","titleFontSize","progressValueColor","progressValueStyle","progressValueFontSize","valuePrefix","valueSuffix","showProgressValue","subtitle","subtitleStyle","subtitleColor","subtitleFontSize","progressFormatter","v","Math","round","allowFontScaling","dashedStrokeConfig","count","width","valuePrefixStyle","valueSuffixStyle","strokeColorConfig","undefined","animatedCircleProps","animatedTextProps","progressValue","useAnimatedValue","styleProps","useMemo","styles","container","rotatingContainer","StyleSheet","absoluteFillObject","valueContainer","valueContainerRow","input","fromProps"],"sources":["index.tsx"],"sourcesContent":["import React, {useMemo} from 'react';\nimport {Text, StyleSheet, View} from 'react-native';\n\nimport ProgressCircle from '../components/progressCircle';\nimport useAnimatedValue from '../hooks/useAnimatedValue';\nimport COLORS from '../utils/colors';\nimport type {CircularProgressProps} from '../types';\nimport ProgressValue from '../components/progressValue';\n\nimport styles from './styles';\n\nconst CircularProgress: React.FC<CircularProgressProps> = ({\n  value,\n  initialValue = 0,\n  circleBackgroundColor = COLORS.TRANSPARENT,\n  radius = 60,\n  duration = 500,\n  delay = 0,\n  maxValue = 100,\n  strokeLinecap = 'round',\n  onAnimationComplete = () => null,\n  activeStrokeColor = COLORS.GREEN,\n  activeStrokeSecondaryColor = null,\n  activeStrokeWidth = 10,\n  inActiveStrokeColor = COLORS.BLACK_30,\n  inActiveStrokeWidth = 10,\n  inActiveStrokeOpacity = 1,\n  clockwise = true,\n  rotation = 0,\n  title = '',\n  titleStyle = {},\n  titleColor,\n  titleFontSize,\n  progressValueColor,\n  progressValueStyle = {},\n  progressValueFontSize,\n  valuePrefix = '',\n  valueSuffix = '',\n  showProgressValue = true,\n  subtitle = '',\n  subtitleStyle = {},\n  subtitleColor,\n  subtitleFontSize,\n  progressFormatter = (v: number) => {\n    'worklet';\n\n    return Math.round(v);\n  },\n  allowFontScaling = true,\n  dashedStrokeConfig = {count: 0, width: 0},\n  valuePrefixStyle = {},\n  valueSuffixStyle = {},\n  strokeColorConfig = undefined,\n}: CircularProgressProps) => {\n  const {animatedCircleProps, animatedTextProps, progressValue} =\n    useAnimatedValue({\n      initialValue,\n      radius,\n      maxValue,\n      clockwise,\n      delay,\n      value,\n      duration,\n      onAnimationComplete,\n      activeStrokeWidth,\n      inActiveStrokeWidth,\n      progressFormatter,\n      strokeColorConfig,\n    });\n\n  const styleProps = useMemo(\n    () => ({\n      radius,\n      rotation,\n      progressValueColor,\n      progressValueFontSize,\n      progressValueStyle,\n      activeStrokeColor,\n      titleStyle,\n      titleColor,\n      titleFontSize,\n      showProgressValue,\n      subtitleColor,\n      subtitleFontSize,\n      subtitleStyle,\n    }),\n    [\n      radius,\n      rotation,\n      progressValueColor,\n      progressValueFontSize,\n      progressValueStyle,\n      activeStrokeColor,\n      titleStyle,\n      titleColor,\n      titleFontSize,\n      showProgressValue,\n      subtitleColor,\n      subtitleFontSize,\n      subtitleStyle,\n    ]\n  );\n\n  return (\n    <View style={styles(styleProps).container} testID=\"progress-bar\">\n      <View style={styles(styleProps).rotatingContainer}>\n        <ProgressCircle\n          circleBackgroundColor={circleBackgroundColor}\n          radius={radius}\n          strokeLinecap={strokeLinecap}\n          activeStrokeColor={activeStrokeColor}\n          activeStrokeSecondaryColor={activeStrokeSecondaryColor}\n          activeStrokeWidth={activeStrokeWidth}\n          inActiveStrokeColor={inActiveStrokeColor}\n          inActiveStrokeWidth={inActiveStrokeWidth}\n          inActiveStrokeOpacity={inActiveStrokeOpacity}\n          animatedCircleProps={animatedCircleProps}\n          dashedStrokeConfig={dashedStrokeConfig}\n        />\n      </View>\n      <View\n        style={[\n          StyleSheet.absoluteFillObject,\n          styles(styleProps).valueContainer,\n        ]}>\n        {showProgressValue && (\n          <View style={styles(styleProps).valueContainerRow}>\n            {!!valuePrefix && (\n              <Text\n                testID=\"progress-bar-value-prefix\"\n                style={[\n                  styles(styleProps).input,\n                  progressValueStyle,\n                  styles(styleProps).fromProps,\n                  valuePrefixStyle,\n                ]}\n                allowFontScaling={allowFontScaling}>\n                {valuePrefix}\n              </Text>\n            )}\n            <ProgressValue\n              initialValue={initialValue}\n              radius={radius}\n              activeStrokeColor={activeStrokeColor}\n              progressValueColor={progressValueColor}\n              progressValueStyle={progressValueStyle}\n              progressValueFontSize={progressValueFontSize}\n              progressValue={progressValue}\n              animatedTextProps={animatedTextProps}\n              allowFontScaling={allowFontScaling}\n            />\n            {!!valueSuffix && (\n              <Text\n                testID=\"progress-bar-value-suffix\"\n                style={[\n                  styles(styleProps).input,\n                  progressValueStyle,\n                  styles(styleProps).fromProps,\n                  valueSuffixStyle,\n                ]}\n                allowFontScaling={allowFontScaling}>\n                {valueSuffix}\n              </Text>\n            )}\n          </View>\n        )}\n        {title && title !== '' ? (\n          <Text\n            testID=\"progress-title-text\"\n            style={[styles(styleProps).title, titleStyle]}\n            numberOfLines={1}\n            allowFontScaling={allowFontScaling}>\n            {title}\n          </Text>\n        ) : null}\n        {subtitle && subtitle !== '' ? (\n          <Text\n            testID=\"progress-subtitle-text\"\n            style={[\n              styles(styleProps).title,\n              styles(styleProps).subtitle,\n              subtitleStyle,\n            ]}\n            numberOfLines={1}\n            allowFontScaling={allowFontScaling}>\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </View>\n  );\n};\n\nexport default CircularProgress;\n"],"mappings":"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"}